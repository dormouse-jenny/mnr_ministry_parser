Необходимые пакеты:
beautifulsoup4
requests
python-docx
(указаны в файле requirements.txt)

Основной файл проекта profit.py

Он создает поддиректорию "doc_docs" 
Запускает scraper.py который скачивает в данную директорию doc файлы с данными
На сайте файлы именуются без четкой структуры поэтому им присваивается имя mpr_<год>.doc

Создает поддиректорию "docx_docs" 
Запускает doc_converter.py который конвертирует файлы в формат docx и складывает в директорию "docx_docs"

Создает поддиректорию "csv_docs" 
Запускает doc_parser.py который (если может) переводит docx файлы в csv формат и складывает в директорию "csv_docs"

Структура получаемого csv файла:

"id"        ИД чиновника (на случай если будут однофамильцы)
"name"      Фамилия И.О. чиновника (в файле нет полных данных о ФИО)
position"   Должность
"family"    Обозначение члена семьи (жена, несовершеннолетний ребенок и.т.д.) в случае наличия нескольких одинаковых строк второму и последующим присваиваются цифры в конце названия (например Несовершеннолетний ребенок 2)
"money"     Годовой доход в формате currency локали пользователя
"source"    Источник дохода (пустое)
"type"      Тип имущества (квартира, земельный участок, транспорт)
"own_type"  Тип владения (собственность, пользование и.т.д.)
"proportion"Пропорция владения для совместной собственности
"meters"    Количество квадратных метров площади для недвижимого имущества
"country"   Страна расположения для недвижимого имущества
"car_type"  Тип движимого имущества (автомобиль, мотоцикл, снегоход и.т.д.)
"car_model" Модель машины

При разборе docx файла содержимое word/document.xml скармливается BeautifulSoup
Из полученного размеченного текста по тегам выделяется таблица, ее строки и ячейки.
Первые две строки - шапка таблицы, остальное - содержимое.
Каждая строка - имущество одного чиновника или его родственника.
Колонки таблицы:
01 номер ПП (только для самих чиновников)
02 ФИО или название родственника
03 - должность
04 - (собственность) вид объекта
05 - (собственность) вид собственности (индивидуальная, долевая)
06 - (собственность) площадь
07 - (собственность) страна расположения
08 - (пользование) вид объекта
09 - (пользование) площадь
10 - (пользование) страна расположения
11 - транспорт
12 - годовой доход
13 - сведения об источниках
В ячейке записаны последовательно свойства этого имущества. Во многих случаях разбивка на параграфы внутри ячейки сделана для удобства просмотра но затрудняет разбор.

При чтении каждой строки создается объект Person со свойствами:
id (счетчик), name, position, family, money, source, ownflats[], rentflats[], cars[]
для чиновника указываются его ID, фамилия и должность, для родственника ID, фамилия и должность чиновника которому он приходится родственником и степень родства в свойстве family

При чтении информации в колонках 04, 08 и 11 создается объект  Item с полями:
type, own_type, proportion, meters, country, car_type, car_model
и записывается в соответствующий список объекта Person
в ownflats для объектов недвижимости в собственности (колонка 04)
в rentflats  для объектов недвижимости в пользовании (колонка 08)
в cars для движимого имущества (колонка 11)

При чтении информации в колонках со свойствами данных объектов предпринимается попытка сопоставить свойтсва и объекты. При различии количества выдается предупреждение:
ОШИБКА ИСХОДНИКА : У {self.family} {self.name} не совпадает количество для свойства  {prop_name.upper()}. Вставьте ноль или пробел в нужное место вручную.

Для автомобилей предпринимается попытка разбить данные на пары  "Вид транспорта" : "марка". В случае неудачи выдается предупреждение:
ОШИБКА ИСХОДНИКА : У {self.family} {self.name} невозможно разобрать список транспортных средств. Приведите "{item}" в читаемый вид (вид марка) вручную.
и список транспортных средств очищается.

После разбора всей строки данные выгружаются в csv файл по одной строке на каждый объект имущества.

Файл doc_parser.py можно запускать самостоятельно передавая ему в качестве параметра docx файл который необходимо конвертировать в csv или без параметров. Тогда будут конвертированы все файлы находящиеся в директории docx_cocs

Итогом работы программы является папка csv_docs в которой помещены файлы разбора деклараций о доходах с разбивкой по годам.









 
